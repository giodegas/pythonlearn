Contributi
=============

Lista dei Collaboratori a "Python for Informatics" {#contributor-list-for-python-for-informatics .unnumbered}
---------------------------------------------

Bruce Shields for copy editing early drafts, Sarah Hegge, Steven Cherry,
Sarah Kathleen Barbarow, Andrea Parker, Radaphat Chongthammakun, Megan
Hixon, Kirby Urner, Sarah Kathleen Barbrow, Katie Kujala, Noah Botimer,
Emily Alinder, Mark Thompson-Kular, James Perry, Eric Hofer, Eytan Adar,
Peter Robinson, Deborah J. Nelson, Jonathan C. Anthony, Eden Rassette,
Jeannette Schroeder, Justin Feezell, Chuanqi Li, Gerald Gordinier, Gavin
Thomas Strassel, Ryan Clement, Alissa Talley, Caitlin Holman, Yong-Mi
Kim, Karen Stover, Cherie Edmonds, Maria Seiferle, Romer Kristi D.
Aranas (RK), Grant Boyer, Hedemarrie Dussan,

Prefazione per "Think Python" {#preface-for-think-python .unnumbered}
--------------------------

### La strana storia di "Think Python" {#the-strange-history-of-think-python .unnumbered}

(Allen B. Downey)

Nel Gennaio 1999 mi stavo preparando a tenere un corso introduttivo
sulla programmazione in Java. Lo avevo già tenuto tre volte ed ero
frustrato. La percentuale di fallimento del corso era molto alta ed
anche gli studenti che completavano il corso con successo il livello
generale era troppo basso.

Uno dei problemi che avevo notato erano i libri di testo. Troppo
voluminosi, con troppi dettagli non necessari su Java e non abbastanza
istruzioni di alto livello su come scrivere i programmi. E tutti
risentivano dell’ effetto botola: cominciavano tranquillamente,
procedevano gradualmente e circa al Capitolo 5 la botola si apriva e in
molti vi cadevano. Gli studenti si ritrovavano con troppo materiale
nuovo, tutto insieme e troppo in fretta e io dovevo spendere il resto
del semestre a rimettere insieme i pezzi.

Due settimane prima dell’inizio del corso, ho deciso di scrivere un
libro di testo. I miei obiettivi erano:

-   Essere conciso. Per gli studenti è molto meglio leggere 10 pagine
    che non leggerne 50.

-   Prestare attenzione al vocabolario. Ho certato di minizzare il gergo
    e definire ogni termine sin dal primo uso.

-   Procedere gradualmente. Per evitare trappole ho preso gli argomenti
    più difficili e li ho separati in piccoli passi.

-   Focalizzarsi sulla programmazione, non sul linguaggio. Ho incluso la
    minima selezione utile di Java ed ho lasciato fuori il resto.

Mi serviva un titolo e quasi per scherzo ho scelto *How to Think Like a
Computer Scientist*.

La prima versione era grezza ma funzionava. Gli studenti leggevano e
capivano annastanza per fare in modo che spendessi il tempo in classe
sugli argomenti più ostici, importanti e principalmente facendo far
pratica agli studenti.

Ho rilasciato il libro sotto GNU Free Documentation License, che
permette agli utenti di copiare, modificare e ridistribuire il libro.

\index{GNU Free Documentation License}
\index{Free Documentation License, GNU}

Quello che è successo dopo è la parte migliore. Jeff Elkner, un
insegnate di scuola superiore in Virginia, ha adottato il mio libro e lo
ha tradotto per Python. Mi ha inviato una copia del suo riadattamento ed
ho avuto la strana esperienza dell’impararare Python leggendo il mio
stesso libro.

Jeff ed io abbiamo rivisto il libro, incorporato uno studio di
ChrisMeyers, e nel 2001 abbiamo rilasciato *How to Think Like a Computer
Scientist: Learning with Python*, anch’esso sotto GNU Free Documentation
License. Come Green Tea Press, ho pubblicato il libro ed iniziato a
venderne copie via Amazon.com e la libreria del college. Altri libri di
Green Tea Press sono disponibili su
[greenteapress.com](greenteapress.com).

Nel 2003 ho iniziato a insegnare all’Olin College ed ho insegnato Python
per la prima volta. Il contrasto con Java era inmpressionante. Gli
studenti avevano meno difficoltà, imparavano di più, lavoravano a
progetti più interessanti e, in generale, si divertivano molto di più.

Nei seguenti 5 anni ho continuato a sviluppare il libro, correggere gli
errori, migliorare gli esempi e ad aggiungere materiale, specialmente
gli esercizi. Nel 2008 ho iniziato a lavorare ad una importante
revisione e allo stesso tempo sono stato contattato da un editore alla
Cambridge University Press che era intenzionato a pubblicare la nuova
versione del libro. Tempismo eccellente!

Spero che apprezzerete lavorando con questo libro, che vi aiuterà ad
imparare a programmare ed a pensare, almeno un pò, come uno Scienziato
dell'Informazione.

### Ringraziamenti per "Think Python" {#acknowledgements-for-think-python .unnumbered}

(Allen B. Downey)

Prima di tutto, ringrazio Jeff Elkner, che ha tradotto il mio libro su
Java in Python, che dato il via a questo progetto e che mi ha introdotto
a quello che sarebbe diventato il mio linguaggio favorito..

Ringrazio anche Chris Meyers, che ha contribuito a molte sezioni di *How
to Think Like a Computer Scientist*.

E ringrazio la Free Software Foundation per aver sviluppato la GNU Free
Documentation License, che ha reso la mia collaborazione con Jeff e
Chris possibile.

\index{GNU Free Documentation License}
\index{Free Documentation License, GNU}

Ringrazio inoltre i redattori di Lulu che hanno lavorato su *How to
Think Like a Computer Scientist*.

Ringrazio tutti gli studenti che hanno lavorato alle prime versioni di
questo libro e tutti coloro che hanno contribuito (elencati in
Appendice) e che mi hanno spedito le correzioni e suggerimenti.

E ringrazio mia moglie Lisa per il suo lavoro su questo libro, Green Tea
Press, e tutti gli altri. 

Allen B. Downey \
Needham MA \

Allen Downey è
Associate Professor of Computer Science al Franklin W. Olin College of
Engineering.

Lista dei Collaboratori di "Think Python" {#contributor-list-for-think-python .unnumbered}
-----------------------------------

\index{contributors}

(Allen B. Downey)

Più di 100 lettori super attenti e competenti hanno inviato suggerimenti
e correzioni negli ultimi anni. I loro contributi, ed entusiasmo per
questo progetto, hanno dato un enorme aiuto.

Per i dettagli sulla natura di ciascun contributo da questi individui,
fare riferimento al testo *Think Python*.

Lloyd Hugh Allen, Yvon Boulianne, Fred Bremmer, Jonah Cohen, Michael
Conlon, Benoit Girard, Courtney Gleason and Katherine Smith, Lee Harr,
James Kaylin, David Kershaw, Eddie Lam, Man-Yong Lee, David Mayo, Chris
McAloon, Matthew J. Moelter, Simon Dicon Montford, John Ouzts, Kevin
Parks, David Pool, Michael Schmitt, Robin Shaw, Paul Sleigh, Craig T.
Snydal, Ian Thomas, Keith Verheyden, Peter Winstanley, Chris Wrobel,
Moshe Zadka, Christoph Zwerschke, James Mayer, Hayden McAfee, Angel
Arnal, Tauhidul Hoque and Lex Berezhny, Dr. Michele Alzetta, Andy
Mitchell, Kalin Harvey, Christopher P. Smith, David Hutchins, Gregor
Lingl, Julie Peters, Florin Oprina, D. J. Webre, Ken, Ivo Wever, Curtis
Yanko, Ben Logan, Jason Armstrong, Louis Cordier, Brian Cain, Rob Black,
Jean-Philippe Rey at Ecole Centrale Paris, Jason Mader at George
Washington University made a number Jan Gundtofte-Bruun, Abel David and
Alexis Dinno, Charles Thayer, Roger Sperberg, Sam Bull, Andrew Cheung,
C. Corey Capel, Alessandra, Wim Champagne, Douglas Wright, Jared
Spindor, Lin Peiheng, Ray Hagtvedt, Torsten Hübsch, Inga Petuhhov, Arne
Babenhauserheide, Mark E. Casida, Scott Tyler, Gordon Shephard, Andrew
Turner, Adam Hobart, Daryl Hammond and Sarah Zimmerman, George Sass,
Brian Bingham, Leah Engelbert-Fenton, Joe Funke, Chao-chao Chen, Jeff
Paine, Lubos Pintes, Gregg Lind and Abigail Heithoff, Max Hailperin,
Chotipat Pornavalai, Stanislaw Antol, Eric Pashman, Miguel Azevedo,
Jianhua Liu, Nick King, Martin Zuther, Adam Zimmerman, Ratnakar Tiwari,
Anurag Goel, Kelli Kratzer, Mark Griffiths, Roydan Ongie, Patryk
Wolowiec, Mark Chonofsky, Russell Coleman, Wei Huang, Karen Barber, Nam
Nguyen, Stéphane Morin, Fernando Tardio, and Paul Stoop.
